{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEV\\\\AppChat\\\\frontend-appchat\\\\src\\\\components\\\\homepages\\\\homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport './homepage.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput } from 'mdb-react-ui-kit';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nexport default function Homepage() {\n  _s();\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: '',\n    receivername: '',\n    connected: false,\n    message: ''\n  });\n  useEffect(() => {\n    console.log(userData);\n  }, [userData]);\n  const [password, setPassword] = useState(\"\");\n  const login = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"email\": userData.username,\n      \"password\": password\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:8081/login\", requestOptions).then(response => {\n      if (response.status === 200) {\n        registerUser();\n        console.log(\"login succesful\");\n      }\n    }).then(result => console.log(result)).catch(error => console.log('error', error));\n  };\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    console.log(userData.username);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    console.table(privateChats);\n    userJoin();\n  };\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  };\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n          console.log(privateChats);\n        }\n        break;\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n  const onPrivateMessage = payload => {\n    console.log(payload);\n    var payloadData = JSON.parse(payload.body);\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      let list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"message\": value\n    });\n  };\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n      setUserData({\n        ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n  const handleUsername = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      \"username\": value,\n      \"receivername\": value\n    });\n  };\n  const registerUser = () => {\n    connect();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          href: \"https://upload.wikimedia.org/wikipedia/commons/6/6c/Facebook_Messenger_logo_2018.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-list\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                setTab(\"CHATROOM\");\n              },\n              className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n              children: \"Chatroom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                setTab(name);\n              },\n              className: `member ${tab === name && \"active\"}`,\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"chat-messages\",\n            children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `message ${chat.senderName === userData.username && \"self\"}`,\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 83\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 41\n              }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 83\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input-message\",\n              placeholder: \"enter the message\",\n              value: userData.message,\n              onChange: handleMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"send-button\",\n              onClick: sendValue,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 48\n        }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"chat-messages\",\n            children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `message ${chat.senderName === userData.username && \"self\"}`,\n              children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 83\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-data\",\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar self\",\n                children: chat.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 83\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input-message\",\n              placeholder: \"enter the message\",\n              value: userData.message,\n              onChange: handleMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"send-button\",\n              onClick: sendPrivateValue,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MDBContainer, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"d-flex justify-content-center align-items-center h-100\",\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          col: \"12\",\n          children: /*#__PURE__*/_jsxDEV(MDBCard, {\n            className: \"bg-dark text-white my-5 mx-auto\",\n            style: {\n              borderRadius: '1rem',\n              maxWidth: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n              className: \"p-5 d-flex flex-column align-items-center mx-auto w-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"fw-bold mb-2 text-uppercase\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white-50 mb-5\",\n                children: \"Please enter your login and password!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                wrapperClass: \"mb-4 mx-5 w-100\",\n                labelClass: \"text-white\",\n                label: \"Enter your name\",\n                id: \"user-name\",\n                size: \"lg\",\n                name: \"userName\",\n                value: userData.username,\n                onChange: handleUsername,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                wrapperClass: \"mb-4 mx-5 w-100\",\n                labelClass: \"text-white\",\n                label: \"Enter your password\",\n                name: \"password\",\n                onChange: e => setPassword(e.target.value),\n                id: \"formControlLg\",\n                type: \"password\",\n                size: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small mb-3 pb-lg-2\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"text-white-50\",\n                  href: \"#!\",\n                  children: \"Forgot password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 71\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mx-2 px-5 btn btn btn-success\",\n                onClick: login,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/register\",\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 84\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n_s(Homepage, \"0gL4LIJD0kdft/fx6eBuOc2ebvM=\");\n_c = Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBInput","Link","stompClient","Homepage","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","userData","setUserData","username","receivername","connected","message","console","log","password","setPassword","login","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","status","registerUser","result","catch","error","connect","Sock","onConnected","onError","subscribe","onMessageReceived","onPrivateMessage","table","userJoin","chatMessage","senderName","send","payload","payloadData","parse","get","set","push","list","err","handleMessage","event","value","target","sendValue","sendPrivateValue","receiverName","handleUsername","keys","map","name","index","chat","borderRadius","maxWidth","e"],"sources":["E:/DEV/AppChat/frontend-appchat/src/components/homepages/homepage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { over } from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport './homepage.css';\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBInput\r\n}\r\n    from 'mdb-react-ui-kit';\r\nimport { Link } from 'react-router-dom';\r\n\r\nvar stompClient = null;\r\nexport default function Homepage() {\r\n    const [privateChats, setPrivateChats] = useState(new Map());\r\n    const [publicChats, setPublicChats] = useState([]);\r\n    const [tab, setTab] = useState(\"CHATROOM\");\r\n    const [userData, setUserData] = useState({\r\n        username: '',\r\n        receivername: '',\r\n        connected: false,\r\n        message: ''\r\n    });\r\n    useEffect(() => {\r\n        console.log(userData);\r\n    }, [userData]);\r\n\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const login = () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify({\r\n            \"email\": userData.username,\r\n            \"password\": password\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n\r\n        fetch(\"http://localhost:8081/login\", requestOptions)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    registerUser();\r\n                    console.log(\"login succesful\")\r\n                }\r\n            })\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n\r\n    const connect = () => {\r\n        let Sock = new SockJS('http://localhost:8080/ws');\r\n        stompClient = over(Sock);\r\n        stompClient.connect({}, onConnected, onError);\r\n    }\r\n\r\n    const onConnected = () => {\r\n        setUserData({ ...userData, \"connected\": true });\r\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\r\n        console.log(userData.username);\r\n        stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\r\n\r\n        console.table(privateChats);\r\n        userJoin();\r\n    }\r\n\r\n    const userJoin = () => {\r\n        var chatMessage = {\r\n            senderName: userData.username,\r\n            status: \"JOIN\"\r\n        };\r\n        stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n    }\r\n\r\n    const onMessageReceived = (payload) => {\r\n        var payloadData = JSON.parse(payload.body);\r\n        switch (payloadData.status) {\r\n            case \"JOIN\":\r\n                if (!privateChats.get(payloadData.senderName)) {\r\n                    privateChats.set(payloadData.senderName, []);\r\n                    setPrivateChats(new Map(privateChats));\r\n                    console.log(privateChats);\r\n                }\r\n                break;\r\n            case \"MESSAGE\":\r\n                publicChats.push(payloadData);\r\n                setPublicChats([...publicChats]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onPrivateMessage = (payload) => {\r\n        console.log(payload);\r\n        var payloadData = JSON.parse(payload.body);\r\n        if (privateChats.get(payloadData.senderName)) {\r\n            privateChats.get(payloadData.senderName).push(payloadData);\r\n            setPrivateChats(new Map(privateChats));\r\n        } else {\r\n            let list = [];\r\n            list.push(payloadData);\r\n            privateChats.set(payloadData.senderName, list);\r\n            setPrivateChats(new Map(privateChats));\r\n        }\r\n    }\r\n\r\n    const onError = (err) => {\r\n        console.log(err);\r\n\r\n    }\r\n\r\n    const handleMessage = (event) => {\r\n        const { value } = event.target;\r\n        setUserData({ ...userData, \"message\": value });\r\n    }\r\n    const sendValue = () => {\r\n        if (stompClient) {\r\n            var chatMessage = {\r\n                senderName: userData.username,\r\n                message: userData.message,\r\n                status: \"MESSAGE\"\r\n            };\r\n            console.log(chatMessage);\r\n            stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n            setUserData({ ...userData, \"message\": \"\" });\r\n        }\r\n    }\r\n\r\n    const sendPrivateValue = () => {\r\n        if (stompClient) {\r\n            var chatMessage = {\r\n                senderName: userData.username,\r\n                receiverName: tab,\r\n                message: userData.message,\r\n                status: \"MESSAGE\"\r\n            };\r\n\r\n            if (userData.username !== tab) {\r\n                privateChats.get(tab).push(chatMessage);\r\n                setPrivateChats(new Map(privateChats));\r\n            }\r\n            stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\r\n            setUserData({ ...userData, \"message\": \"\" });\r\n        }\r\n    }\r\n\r\n    const handleUsername = (event) => {\r\n        const { value } = event.target;\r\n        setUserData({ ...userData, \"username\": value, \"receivername\": value });\r\n    }\r\n\r\n    const registerUser = () => {\r\n        connect();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {userData.connected ?\r\n                <div className=\"chat-box\">\r\n                    <div className='header'>\r\n                        <img href=\"https://upload.wikimedia.org/wikipedia/commons/6/6c/Facebook_Messenger_logo_2018.svg\"></img>\r\n                        <p>{userData.username}</p>\r\n                    </div>\r\n\r\n                    <div className='content'>\r\n                        <div className=\"member-list\">\r\n                            <ul>\r\n                                <li onClick={() => { setTab(\"CHATROOM\") }} className={`member ${tab === \"CHATROOM\" && \"active\"}`}>Chatroom</li>\r\n                                {[...privateChats.keys()].map((name, index) => (\r\n                                    <li onClick={() => { setTab(name) }} className={`member ${tab === name && \"active\"}`} key={index}>{name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        {tab === \"CHATROOM\" && <div className=\"chat-content\">\r\n                            <ul className=\"chat-messages\">\r\n                                {publicChats.map((chat, index) => (\r\n                                    <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\r\n                                        {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\r\n                                        <div className=\"message-data\">{chat.message}</div>\r\n                                        {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n\r\n                            <div className=\"send-message\">\r\n                                <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\r\n                                <button type=\"button\" className=\"send-button\" onClick={sendValue}>send</button>\r\n                            </div>\r\n                        </div>}\r\n                        {tab !== \"CHATROOM\" && <div className=\"chat-content\">\r\n                            <ul className=\"chat-messages\">\r\n                                {[...privateChats.get(tab)].map((chat, index) => (\r\n                                    <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\r\n                                        {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\r\n                                        <div className=\"message-data\">{chat.message}</div>\r\n                                        {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n\r\n                            <div className=\"send-message\">\r\n                                <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} />\r\n                                <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>send</button>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n\r\n                </div>\r\n                :\r\n                <MDBContainer fluid>\r\n                    <MDBRow className='d-flex justify-content-center align-items-center h-100'>\r\n                        <MDBCol col='12'>\r\n                            <MDBCard className='bg-dark text-white my-5 mx-auto'\r\n                                style={{ borderRadius: '1rem', maxWidth: '400px' }}>\r\n                                <MDBCardBody className='p-5 d-flex flex-column align-items-center mx-auto w-100'>\r\n\r\n                                    <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\r\n                                    <p className=\"text-white-50 mb-5\">Please enter your login and password!</p>\r\n\r\n                                    <MDBInput wrapperClass='mb-4 mx-5 w-100' labelClass='text-white'\r\n                                        label='Enter your name'\r\n                                        id='user-name'\r\n                                        size=\"lg\"\r\n                                        name=\"userName\"\r\n                                        value={userData.username}\r\n                                        onChange={handleUsername}\r\n                                        margin=\"normal\" />\r\n                                    <MDBInput wrapperClass='mb-4 mx-5 w-100' labelClass='text-white'\r\n                                        label='Enter your password'\r\n                                        name='password'\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        id='formControlLg' type='password' size=\"lg\" />\r\n\r\n                                    <p className=\"small mb-3 pb-lg-2\"><a className=\"text-white-50\" href=\"#!\">Forgot\r\n                                        password?</a></p>\r\n                                    <button className='mx-2 px-5 btn btn btn-success' onClick={login}>Login\r\n                                    </button>\r\n                                    <br />\r\n                                    <div>\r\n                                        <p className=\"mb-0\">Don't have an account? <Link to=\"/register\">Sign Up</Link></p>\r\n                                    </div>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n            }\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}